<?xml version="1.0" encoding="utf-8"?>
<test-run id="2" name="GraphRegex.Tests.dll" fullname="/Users/williamsarland/Projects/GraphRegex/GraphRegex.Tests/bin/Debug/netcoreapp3.1/GraphRegex.Tests.dll" testcasecount="16" result="Passed" start-time="2020-01-29 15:44:12Z" end-time="2020-01-29 15:44:12Z" duration="0.049821" total="16" passed="16" failed="0" inconclusive="0" skipped="0" asserts="16" random-seed="444564465">
  <command-line><![CDATA[/Users/williamsarland/Projects/GraphRegex/GraphRegex.Tests/bin/Debug/netcoreapp3.1/GraphRegex.Tests.dll]]></command-line>
  <filter />
  <test-suite type="Assembly" id="1019" name="GraphRegex.Tests.dll" fullname="/Users/williamsarland/Projects/GraphRegex/GraphRegex.Tests/bin/Debug/netcoreapp3.1/GraphRegex.Tests.dll" runstate="Runnable" testcasecount="16" result="Passed" start-time="2020-01-29 15:44:12Z" end-time="2020-01-29 15:44:12Z" duration="0.049821" total="16" passed="16" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="16">
    <environment framework-version="3.12.0.0" clr-version="3.1.1" os-version="Darwin 18.7.0 Darwin Kernel Version 18.7.0: Sun Dec  1 18:59:03 PST 2019; root:xnu-4903.278.19~1/RELEASE_X86_64" platform="Unix" cwd="/Users/williamsarland/Projects/GraphRegex/GraphRegex.Tests/bin/Debug/netcoreapp3.1" machine-name="MacBook-Pro-de-Williams" user="williamsarland" user-domain="MacBook-Pro-de-Williams" culture="" uiculture="" os-architecture="x64" />
    <settings>
      <setting name="WorkDirectory" value="/Users/williamsarland/Projects/GraphRegex/GraphRegex.Tests/bin/Debug/netcoreapp3.1" />
      <setting name="NumberOfTestWorkers" value="4" />
    </settings>
    <properties>
      <property name="_PID" value="27750" />
      <property name="_APPDOMAIN" value="GraphRegex.Tests" />
    </properties>
    <test-suite type="TestSuite" id="1020" name="GraphRegex" fullname="GraphRegex" runstate="Runnable" testcasecount="16" result="Passed" start-time="2020-01-29 15:44:12Z" end-time="2020-01-29 15:44:12Z" duration="0.042272" total="16" passed="16" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="16">
      <test-suite type="TestSuite" id="1021" name="Tests" fullname="GraphRegex.Tests" runstate="Runnable" testcasecount="16" result="Passed" start-time="2020-01-29 15:44:12Z" end-time="2020-01-29 15:44:12Z" duration="0.041715" total="16" passed="16" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="16">
        <test-suite type="TestFixture" id="1000" name="RegexTests" fullname="GraphRegex.Tests.RegexTests" classname="GraphRegex.Tests.RegexTests" runstate="Runnable" testcasecount="16" result="Passed" start-time="2020-01-29 15:44:12Z" end-time="2020-01-29 15:44:12Z" duration="0.039835" total="16" passed="16" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="16">
          <test-suite type="ParameterizedMethod" id="1017" name="buildingWorks" fullname="GraphRegex.Tests.RegexTests.buildingWorks" classname="GraphRegex.Tests.RegexTests" runstate="Runnable" testcasecount="6" result="Passed" start-time="2020-01-29 15:44:12Z" end-time="2020-01-29 15:44:12Z" duration="0.027272" total="6" passed="6" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="6">
            <test-case id="1011" name="buildingWorks(&quot;a&quot;,&quot;'a'&quot;)" fullname="GraphRegex.Tests.RegexTests.buildingWorks(&quot;a&quot;,&quot;'a'&quot;)" methodname="buildingWorks" classname="GraphRegex.Tests.RegexTests" runstate="Runnable" seed="1033936063" result="Passed" start-time="2020-01-29 15:44:12Z" end-time="2020-01-29 15:44:12Z" duration="0.022462" asserts="1" />
            <test-case id="1012" name="buildingWorks(&quot;ab&quot;,&quot;(+ 'a' 'b')&quot;)" fullname="GraphRegex.Tests.RegexTests.buildingWorks(&quot;ab&quot;,&quot;(+ 'a' 'b')&quot;)" methodname="buildingWorks" classname="GraphRegex.Tests.RegexTests" runstate="Runnable" seed="1574270598" result="Passed" start-time="2020-01-29 15:44:12Z" end-time="2020-01-29 15:44:12Z" duration="0.000227" asserts="1" />
            <test-case id="1013" name="buildingWorks(&quot;a|b&quot;,&quot;(| 'a' 'b')&quot;)" fullname="GraphRegex.Tests.RegexTests.buildingWorks(&quot;a|b&quot;,&quot;(| 'a' 'b')&quot;)" methodname="buildingWorks" classname="GraphRegex.Tests.RegexTests" runstate="Runnable" seed="2102968529" result="Passed" start-time="2020-01-29 15:44:12Z" end-time="2020-01-29 15:44:12Z" duration="0.000073" asserts="1" />
            <test-case id="1014" name="buildingWorks(&quot;ab|bc&quot;,&quot;(| (+ 'a' 'b') (+ 'b' 'c'))&quot;)" fullname="GraphRegex.Tests.RegexTests.buildingWorks(&quot;ab|bc&quot;,&quot;(| (+ 'a' 'b') (+ 'b' 'c'))&quot;)" methodname="buildingWorks" classname="GraphRegex.Tests.RegexTests" runstate="Runnable" seed="2126485334" result="Passed" start-time="2020-01-29 15:44:12Z" end-time="2020-01-29 15:44:12Z" duration="0.000067" asserts="1" />
            <test-case id="1015" name="buildingWorks(&quot;(ab|c)*(de*|f)(g|h*i)&quot;,&quot;(+ (* (| (+ 'a' 'b') 'c')) (| (+ 'd' (* 'e')) 'f') (| 'g' (+ (* 'h') 'i')))&quot;)" fullname="GraphRegex.Tests.RegexTests.buildingWorks(&quot;(ab|c)*(de*|f)(g|h*i)&quot;,&quot;(+ (* (| (+ 'a' 'b') 'c')) (| (+ 'd' (* 'e')) 'f') (| 'g' (+ (* 'h') 'i')))&quot;)" methodname="buildingWorks" classname="GraphRegex.Tests.RegexTests" runstate="Runnable" seed="859215544" result="Passed" start-time="2020-01-29 15:44:12Z" end-time="2020-01-29 15:44:12Z" duration="0.000322" asserts="1" />
            <test-case id="1016" name="buildingWorks(&quot;((ab)*|c)def*|x|y*&quot;,&quot;(| (+ (| (* (+ 'a' 'b')) 'c') 'd' 'e' (* 'f')) 'x' (* 'y'))&quot;)" fullname="GraphRegex.Tests.RegexTests.buildingWorks(&quot;((ab)*|c)def*|x|y*&quot;,&quot;(| (+ (| (* (+ 'a' 'b')) 'c') 'd' 'e' (* 'f')) 'x' (* 'y'))&quot;)" methodname="buildingWorks" classname="GraphRegex.Tests.RegexTests" runstate="Runnable" seed="1899690753" result="Passed" start-time="2020-01-29 15:44:12Z" end-time="2020-01-29 15:44:12Z" duration="0.000068" asserts="1" />
          </test-suite>
          <test-suite type="ParameterizedMethod" id="1010" name="matchWorks" fullname="GraphRegex.Tests.RegexTests.matchWorks" classname="GraphRegex.Tests.RegexTests" runstate="Runnable" testcasecount="9" result="Passed" start-time="2020-01-29 15:44:12Z" end-time="2020-01-29 15:44:12Z" duration="0.008020" total="9" passed="9" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="9">
            <test-case id="1001" name="matchWorks(&quot;a&quot;,True)" fullname="GraphRegex.Tests.RegexTests.matchWorks(&quot;a&quot;,True)" methodname="matchWorks" classname="GraphRegex.Tests.RegexTests" runstate="Runnable" seed="461150066" result="Passed" start-time="2020-01-29 15:44:12Z" end-time="2020-01-29 15:44:12Z" duration="0.006834" asserts="1" />
            <test-case id="1002" name="matchWorks(&quot;ab&quot;,True)" fullname="GraphRegex.Tests.RegexTests.matchWorks(&quot;ab&quot;,True)" methodname="matchWorks" classname="GraphRegex.Tests.RegexTests" runstate="Runnable" seed="574685913" result="Passed" start-time="2020-01-29 15:44:12Z" end-time="2020-01-29 15:44:12Z" duration="0.000167" asserts="1" />
            <test-case id="1003" name="matchWorks(&quot;a*&quot;,True)" fullname="GraphRegex.Tests.RegexTests.matchWorks(&quot;a*&quot;,True)" methodname="matchWorks" classname="GraphRegex.Tests.RegexTests" runstate="Runnable" seed="713247317" result="Passed" start-time="2020-01-29 15:44:12Z" end-time="2020-01-29 15:44:12Z" duration="0.000067" asserts="1" />
            <test-case id="1004" name="matchWorks(&quot;a|b&quot;,True)" fullname="GraphRegex.Tests.RegexTests.matchWorks(&quot;a|b&quot;,True)" methodname="matchWorks" classname="GraphRegex.Tests.RegexTests" runstate="Runnable" seed="1942776843" result="Passed" start-time="2020-01-29 15:44:12Z" end-time="2020-01-29 15:44:12Z" duration="0.000063" asserts="1" />
            <test-case id="1005" name="matchWorks(&quot;((ab)*|c)def*|x|y*(g|hi)&quot;,True)" fullname="GraphRegex.Tests.RegexTests.matchWorks(&quot;((ab)*|c)def*|x|y*(g|hi)&quot;,True)" methodname="matchWorks" classname="GraphRegex.Tests.RegexTests" runstate="Runnable" seed="2119624639" result="Passed" start-time="2020-01-29 15:44:12Z" end-time="2020-01-29 15:44:12Z" duration="0.000066" asserts="1" />
            <test-case id="1006" name="matchWorks(&quot;((ab)*|c)def*|x|y*(g|hi)*)&quot;,False)" fullname="GraphRegex.Tests.RegexTests.matchWorks(&quot;((ab)*|c)def*|x|y*(g|hi)*)&quot;,False)" methodname="matchWorks" classname="GraphRegex.Tests.RegexTests" runstate="Runnable" seed="824340833" result="Passed" start-time="2020-01-29 15:44:12Z" end-time="2020-01-29 15:44:12Z" duration="0.000204" asserts="1" />
            <test-case id="1007" name="matchWorks(&quot;*a&quot;,False)" fullname="GraphRegex.Tests.RegexTests.matchWorks(&quot;*a&quot;,False)" methodname="matchWorks" classname="GraphRegex.Tests.RegexTests" runstate="Runnable" seed="1769265419" result="Passed" start-time="2020-01-29 15:44:12Z" end-time="2020-01-29 15:44:12Z" duration="0.000075" asserts="1" />
            <test-case id="1008" name="matchWorks(&quot;*&quot;,False)" fullname="GraphRegex.Tests.RegexTests.matchWorks(&quot;*&quot;,False)" methodname="matchWorks" classname="GraphRegex.Tests.RegexTests" runstate="Runnable" seed="1454907271" result="Passed" start-time="2020-01-29 15:44:12Z" end-time="2020-01-29 15:44:12Z" duration="0.000066" asserts="1" />
            <test-case id="1009" name="matchWorks(&quot;|&quot;,False)" fullname="GraphRegex.Tests.RegexTests.matchWorks(&quot;|&quot;,False)" methodname="matchWorks" classname="GraphRegex.Tests.RegexTests" runstate="Runnable" seed="1830160675" result="Passed" start-time="2020-01-29 15:44:12Z" end-time="2020-01-29 15:44:12Z" duration="0.000061" asserts="1" />
          </test-suite>
          <test-case id="1018" name="tree" fullname="GraphRegex.Tests.RegexTests.tree" methodname="tree" classname="GraphRegex.Tests.RegexTests" runstate="Runnable" seed="1697982921" result="Passed" start-time="2020-01-29 15:44:12Z" end-time="2020-01-29 15:44:12Z" duration="0.000384" asserts="1" />
        </test-suite>
      </test-suite>
    </test-suite>
  </test-suite>
</test-run>